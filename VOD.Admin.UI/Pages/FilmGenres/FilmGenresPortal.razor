@inject IAdminService AdminService

<h3>@Navigation</h3>

@if (Alert != string.Empty)
{
    <div class="alert alert-danger alert-dismissible fade show w-50" role="alert">
        <strong>@Alert</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="CloseAlert"></button>
    </div>
}

@if (Navigation == PageType.Create)
{
    <ChangeFilmGenres Page="@Navigation" OnChange="OnChange"></ChangeFilmGenres>
}
@if (Navigation == PageType.Edit || Navigation == PageType.Delete)
{
    <ChangeFilmGenres Page="@Navigation" OnChange="OnChange" Model="FilmGenre"></ChangeFilmGenres>
}

<div class="d-flex me-1">
    <a type="button" href="/" class="btn btn-outline-secondary rounded-0 me-1">Home</a>
    <button type="button" class="btn btn-outline-primary rounded-0 me-1" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
    <button type="button" class="btn btn-outline-success rounded-0" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>

<FilmGenresIndex Model="Model"></FilmGenresIndex>

@code {
    string Alert = string.Empty;
    string Navigation = PageType.Index;
    List<FilmGenreDTO> Model { get; set; } = new();
    FilmGenreDTO FilmGenre = new();

    void ChangePageType(string pageType) => Navigation = pageType;

    void CloseAlert() => Alert = string.Empty;

    async Task OnChange(string alert)
    {
        Alert = alert;
        Model = await AdminService.GetAsync<FilmGenreDTO>($"filmgenres");
        ChangePageType(PageType.Index);
    }

    protected override async Task OnInitializedAsync()
    {
        Alert = string.Empty;   

        Model = await AdminService.GetAsync<FilmGenreDTO>($"filmgenres");
    }
}
